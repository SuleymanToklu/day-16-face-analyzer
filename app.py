import streamlit as st
from deepface import DeepFace
import cv2
import numpy as np

st.set_page_config(
    page_title="AI YÃ¼z Analiz AracÄ±",
    page_icon="ğŸ§ ",
    layout="wide",
)

st.header("YÃ¼z Analiz AracÄ± ğŸ§ ", divider="rainbow")
st.write("LÃ¼tfen analiz etmek istediÄŸiniz bir fotoÄŸraf dosyasÄ±nÄ± (.png, .jpg, .jpeg) yÃ¼kleyin.")

uploaded_file = st.file_uploader(
    "Dosya YÃ¼kle",
    type=["png", "jpg", "jpeg"]
)

if uploaded_file is not None:
    file_bytes = np.asarray(bytearray(uploaded_file.read()), dtype=np.uint8)
    image = cv2.imdecode(file_bytes, 1)

    with st.spinner("Analiz ediliyor... LÃ¼tfen bekleyin."):
        try:
            analysis = DeepFace.analyze(
                img_path=image,
                actions=["age", "gender", "race", "emotion"],
                detector_backend="opencv",
                enforce_detection=False 
            )
            
            st.subheader("Analiz Edilen FotoÄŸraf")
            st.image(image, channels="BGR", use_column_width=True)

            if analysis:
                st.subheader("Analiz SonuÃ§larÄ± ğŸ“Š")
                
                col1, col2 = st.columns(2)
                
                with col1:
                    st.metric(label="YaÅŸ", value=analysis[0]["age"])
                    st.metric(label="Cinsiyet", value=analysis[0]["gender"])
                
                with col2:
                    st.metric(label="Duygu Durumu", value=analysis[0]["dominant_emotion"])
                    st.metric(label="Irk", value=analysis[0]["dominant_race"])

                st.success("Analiz tamamlandÄ±!")
            
        except Exception as e:
            st.error(f"Hata oluÅŸtu: {e}. LÃ¼tfen baÅŸka bir fotoÄŸraf deneyin.")
            st.info("EÄŸer hata devam ediyorsa, fotoÄŸrafÄ±n iÃ§inde net bir yÃ¼z olduÄŸundan emin olun.")